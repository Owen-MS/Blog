(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{460:function(e,t,s){"use strict";s.r(t);var n=s(45),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"module、chunk、bundle有啥区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#module、chunk、bundle有啥区别"}},[e._v("#")]),e._v(" module、chunk、bundle有啥区别?")]),e._v(" "),s("h2",{attrs:{id:"bundle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bundle"}},[e._v("#")]),e._v(" bundle")]),e._v(" "),s("p",[e._v("Glossary：Bundle: bundle 由许多不同的模块生成，包含已经经过加载和编译过程的源文件的最终版本。")]),e._v(" "),s("h2",{attrs:{id:"chunk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chunk"}},[e._v("#")]),e._v(" chunk")]),e._v(" "),s("p",[e._v("Glossary：Chunk: 此 webpack 特定术语在内部用于管理捆绑过程。输出束（bundle）由块组成，\n其中有几种类型（例如 entry 和 child ）。\n通常，块 直接与 输出束 (bundle）相对应，\n但是，有些配置不会产生一对一的关系。")]),e._v(" "),s("h2",{attrs:{id:"module"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#module"}},[e._v("#")]),e._v(" module")]),e._v(" "),s("p",[e._v("Glossary Module: Module\n是离散功能块，相比于完整程序提供了更小的接触面。\n精心编写的模块提供了可靠的抽象和封装界限，使得应用程序中每个模块都具有条理清楚的设计和明确的目的。")]),e._v(" "),s("h2",{attrs:{id:"大白话解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大白话解释"}},[e._v("#")]),e._v(" 大白话解释：")]),e._v(" "),s("p",[e._v("module是webpack支持解析的模块；")]),e._v(" "),s("p",[e._v("chunk包含多个module，存在于webpack处理过程中的阶段；")]),e._v(" "),s("p",[e._v("bundle包含一个或多个chunk，是源码经过webpack处理后的最终版本；")]),e._v(" "),s("h2",{attrs:{id:"举例-splitchunks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例-splitchunks"}},[e._v("#")]),e._v(" 举例 splitChunks")]),e._v(" "),s("p",[e._v("假设我们的"),s("code",[e._v("entry")]),e._v("有A和B两个入口，A和B都引入了"),s("code",[e._v("lodash")]),e._v("，打包出来的除了\nA和B对应的"),s("code",[e._v("A.bundle.js")]),e._v("和"),s("code",[e._v("B.bundle.js")]),e._v("之外还有一个"),s("code",[e._v("vendors.js")]),e._v("包含lodash的bundle的文件。")]),e._v(" "),s("p",[e._v("1、你的项目入口（entry）")]),e._v(" "),s("p",[e._v("2、通过import()动态引入的代码")]),e._v(" "),s("p",[e._v("3、通过splitChunks拆分出来的代码")]),e._v(" "),s("p",[e._v("chunk包含着module，可能是一对多也可能是一对一。")]),e._v(" "),s("p",[e._v("这就是我们的两个module，生成了两个chunk，然后split，生成新的chunk，然后最后打包出来了3个bundle")])])}),[],!1,null,null,null);t.default=a.exports}}]);