(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{449:function(e,r,t){"use strict";t.r(r);var a=t(45),s=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"fiber的心智模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fiber的心智模型"}},[e._v("#")]),e._v(" Fiber的心智模型")]),e._v(" "),t("h2",{attrs:{id:"什么是代数效应。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是代数效应。"}},[e._v("#")]),e._v(" 什么是代数效应。")]),e._v(" "),t("p",[e._v("代数效用是函数式编程的一个概念，用于将副作用从函数中分离。")]),e._v(" "),t("p",[e._v("async具有传染性。")]),e._v(" "),t("h2",{attrs:{id:"代数效用在react中的应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代数效用在react中的应用"}},[e._v("#")]),e._v(" 代数效用在React中的应用")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://codesandbox.io/s/frosty-hermann-bztrp?file=/src/index.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("suspense"),t("OutboundLink")],1),e._v("\n异步，但是是同步写法")]),e._v(" "),t("h2",{attrs:{id:"代数效应与generator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代数效应与generator"}},[e._v("#")]),e._v(" 代数效应与Generator")]),e._v(" "),t("p",[e._v("从React15到React16，协调器（Reconciler）重构的一大目的是：将老的同步更新的架构变为异步中断更新。")]),e._v(" "),t("p",[e._v("异步可中断更新可以理解为：更新在执行过程中可能会被打断（浏览器时间分片用尽或有更高优任务插队），当可以\n继续执行时恢复之前执行的中间状态。")]),e._v(" "),t("p",[e._v("这就是浏览器原生支持类似的实现，这就是Generator。")]),e._v(" "),t("p",[e._v("但是Generator的一些缺陷使React团队放弃了他：")]),e._v(" "),t("ul",[t("li",[e._v("类似async，Generator也是传染性的，使用Generator则上下文的其他函数也需要作出改变。这样心智负担比较重")]),e._v(" "),t("li",[e._v("Generator执行的中间状态是上下文关联的，是顺序的。")])]),e._v(" "),t("h2",{attrs:{id:"代数效应与fiber"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代数效应与fiber"}},[e._v("#")]),e._v(" 代数效应与fiber")]),e._v(" "),t("p",[e._v("Fiber并不是计算机术语中的新名词，他的中文翻译叫做纤程，与进程（process）、线程（Thread）、协程（Coroutine）同为程序执行过程。")]),e._v(" "),t("p",[e._v("在很多文章中将纤程理解为协程的一种实现。在JS中，协程的实现便是Generator。")]),e._v(" "),t("p",[e._v("所以我们可以将纤程（Fiber）、协程（Generator）理解为代数效应思想在JS中的体现。")]),e._v(" "),t("p",[e._v("React Fiber可以理解为：")]),e._v(" "),t("p",[e._v("React内部实现的一套状态更新机制。支持任务不同优先级，可中断与恢复，并且恢复后可以复用之前的中间状态。")])])}),[],!1,null,null,null);r.default=s.exports}}]);